# Generated by Django 5.2.4 on 2025-08-05 18:59

import django.core.validators
import django.db.models.deletion
import inicio.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('contenido', models.TextField()),
                ('excerpt', models.CharField(max_length=300)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('nacionalidad', models.CharField(max_length=100, verbose_name='Nacionalidad')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('fecha_fallecimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de fallecimiento (opcional)')),
                ('biografia', models.TextField(blank=True, null=True, verbose_name='Biografía')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='autores/', verbose_name='Foto del autor')),
                ('premios', models.CharField(blank=True, max_length=255, null=True, verbose_name='Premios recibidos')),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
                'ordering': ['apellido', 'nombre'],
                'unique_together': {('nombre', 'apellido')},
            },
        ),
        migrations.CreateModel(
            name='Editorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre completo de la editorial', max_length=100, unique=True, verbose_name='Nombre de la editorial')),
                ('pais', models.CharField(default='Desconocido', help_text='País donde tiene su sede principal', max_length=50, verbose_name='País de origen')),
                ('logo', models.ImageField(blank=True, help_text='Sube el logo de la editorial (máx. 2MB)', null=True, upload_to='editoriales/logos/%Y/%m/%d/', verbose_name='Logo de la editorial')),
                ('descripcion', models.TextField(blank=True, help_text='Historia y detalles relevantes de la editorial', null=True, verbose_name='Descripción')),
                ('sitio_web', models.URLField(blank=True, help_text='URL completa (ej: https://www.penguinrandomhouse.com)', null=True, verbose_name='Sitio web oficial')),
                ('fundacion', models.PositiveIntegerField(blank=True, help_text='Año de creación de la editorial (ej: 2013)', null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2025)], verbose_name='Año de fundación')),
                ('slug', models.SlugField(blank=True, help_text='URL amigable (se genera automáticamente)', max_length=100, null=True, unique=True)),
                ('activa', models.BooleanField(default=True, help_text='Indica si la editorial sigue operando', verbose_name='Activa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
            ],
            options={
                'verbose_name': 'Editorial',
                'verbose_name_plural': 'Editoriales',
                'ordering': ['nombre'],
                'indexes': [models.Index(fields=['nombre'], name='inicio_edit_nombre_d201f1_idx'), models.Index(fields=['slug'], name='inicio_edit_slug_1a1e4a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título completo del libro', max_length=200, verbose_name='Título')),
                ('año_publicacion', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1000, message='El año debe ser mayor a 1000'), django.core.validators.MaxValueValidator(inicio.models.get_current_year, message='El año no puede ser futuro')], verbose_name='Año de publicación')),
                ('precio', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0.01, message='El precio debe ser mayor a 0')], verbose_name='Precio')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('disponible', models.BooleanField(default=True, verbose_name='Disponible')),
                ('portada', models.ImageField(blank=True, help_text='Formato: JPG, PNG o WEBP. Tamaño recomendado: 500x800px', null=True, upload_to='portadas/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Portada del libro')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='libros', to='inicio.autor', verbose_name='Autor')),
                ('editorial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='libros', to='inicio.editorial', verbose_name='Editorial')),
            ],
            options={
                'verbose_name': 'Libro',
                'verbose_name_plural': 'Libros',
                'ordering': ['-año_publicacion', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='Resena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('LIBRO', 'Libro'), ('AUTOR', 'Autor'), ('EDITORIAL', 'Editorial'), ('OTRO', 'Otro')], max_length=10)),
                ('titulo', models.CharField(max_length=200)),
                ('contenido', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('calificacion', models.IntegerField()),
                ('autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inicio.autor')),
                ('editorial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inicio.editorial')),
                ('libro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inicio.libro')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddIndex(
            model_name='libro',
            index=models.Index(fields=['titulo'], name='inicio_libr_titulo_b3ad55_idx'),
        ),
        migrations.AddIndex(
            model_name='libro',
            index=models.Index(fields=['año_publicacion'], name='inicio_libr_año_pub_4baaf4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='libro',
            unique_together={('titulo', 'autor')},
        ),
    ]
